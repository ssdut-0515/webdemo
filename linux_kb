1.查看文件atime, ctime和mtime， atime -〉access time指的是文件最后被读取的时间, 
                                ctime -> change time指的是文件本身最后被变更的时间，变更动作可以使chmod、chgrp、mv等等,
                                mtime -> modify time指的是文件内容最后被修改的时间，修改动作可以使echo重定向、vi等等.
  ls -l //查看mtime
  ls -l --time=atime //查看atime  or ls -lu
  ls -l --time=ctime //查看ctime  or ls -lc
  
2. 查看进程的启动时间
   在Linux下， 如果需要查看进程的启动时间， 常用ps aux命令，但是ps aux命令的缺陷在于只能显示时间到年、日期、或者时间， 无法具体到年月日时分秒。
   如果需要查看某个进程的具体启动时间， 使用 ps -p PID -o lstart,  其中，PID为某个进程的进程ID号。
   如下所示， 显示系统中所有httpd进程的具体启动时间。
   for pid in $(pgrep httpd); do echo -n "${pid} " ; ps -p ${pid} -o lstart | grep -v "START" ; done  
    301 Mon Aug 27 11:21:59 2012 
    344 Mon Aug 27 11:33:13 2012 
    25065 Sun Aug 26 03:27:03 2012 
    25066 Sun Aug 26 03:27:03 2012 
    25067 Sun Aug 26 03:27:03 2012 
    25068 Sun Aug 26 03:27:03 2012 
    25069 Sun Aug 26 03:27:03 2012 
    25070 Sun Aug 26 03:27:03 2012 
    25071 Sun Aug 26 03:27:03 2012 
    25072 Sun Aug 26 03:27:03 2012 
    27903 Wed Jun 20 22:50:47 2012 
    32767 Mon Aug 27 11:21:48 2012 
3. 获取字符串的后n个字符，echo ${var: -n} (注意此命令只在ksh和bash上work，在csh下不好)
   e.g：如果SHELL=/bin/bash
       那么echo ${SHELL: -1}的结果为h，echo ${SHELL: -2}的结果为sh，依次类推，当n大于字符串的长度时返回空
4. sed删除不匹配的行: sed '/<pattern>/!d'
   e.g: 假设a.txt的内容为：
        hello world.
        kobe is the best basketball player in the world.
        bye bye.
        hello sed.
        那么sed '/world/!d' a.txt的结果为
        hello world.
        kobe is the best basketball player in the world.
   
5.cut在某些情况下可以实现awk的功能
  echo "name:andy" | cut -d: -f2
  echo "name:andy" | awk -F: '{print $2}'
  区别是cut的-d只能是一个字符，awk的-F可以是多个字符。
6.solaris下Csh的变量名最大长度为20， linux下暂时没有发现这个限制。
7.Enter ^M in linux
  在Bash下面Ctrl + V + M， 可以打出^M.
8.ways to delete all lines in vi
  1) put the curse in the first line and press d then G.   
     where   d : delete    
     G : to the last line
  2) :1,$d   
     The : introduces a command (and moves the cursor to the bottom).   
     The 1,$ is an indication of which lines the following command (d) should work on. 
     In this case the range from line one to the last line (indicated by $, so you don't need to know the number of lines in the document).   
     The final d stands for delete the indicated lines. 
  3) :%d   
     •: tells vi to go in command mode   
     •% means all the line   
     •d : delete
     
9. awk去除重复行
   awk '!a[$3,$1]++' test
   Awk print unique
   awk '{ a[$1" "$2]++ } END { for (b in a) { print b } }' test
   AWK Variables
       http://www.thegeekstuff.com/2010/01/awk-tutorial-understand-awk-variables-with-3-practical-examples
   AWk Arrays
       http://www.thegeekstuff.com/2010/03/awk-arrays-explained-with-5-practical-examples/
   AWk built in variables
       http://www.thegeekstuff.com/2010/01/8-powerful-awk-built-in-variables-fs-ofs-rs-ors-nr-nf-filename-fnr/?ref=binfind.com/web
   通过建库脚本字段自动生成proto字段   
   awk -F"'" '{split($1,a," ");print "string "a[1]" = "FNR"; //"$2}' test
   
   通过Domain字段自动生成FromGrpc方法   
   awk -F" " '{gsub(/;/,"",$3);print "tradingStockInOrderDetail."$3" = stockInOrderDetail.get"toupper(substr($3,1,1))substr($3,2)"();"}' test
   通过Domain字段生成Grpc builder的set方法
   awk -F" " '{gsub(/;/,"",$3);print ".set"toupper(substr($3,1,1))substr($3,2)"(this."$3")"}' test
10. 正则表达式相关
Regex tutorial
http://www.regular-expressions.info/

Online Regex validator
https://regex101.com/r/vH8gX6/26

Sed online manual
https://www.gnu.org/software/sed/manual/sed.html

egrep()
http://www.robelle.com/smugbook/regexpr.html

11. groovy unit test
Java unit test with groovy
  https://www.ibm.com/developerworks/library/j-pg11094/

Testing with spock
  https://zeroturnaround.com/rebellabs/using-spock-to-test-groovy-and-java-applications/

  http://thejavatar.com/testing-with-spock/

12. linux network bridge
   http://blog.chinaunix.net/uid-21556133-id-122081.html
   
13. curl测试REST API
    #!/bin/bash

    TOKEN='eyJhbGciOiJIUzUxMiJ9.eyJjcmVhdGVkIjoxNTA1Mzc4NDY1ODI3LCJzbmFtZSI6Iua1i-ivleS-m-W6lOWVhiIsIm5hbWUiOiJ0ZXN0VXNlcjEiLCJhZG1pbiI6MiwiaWQiOjkzMywic2lkIjo2NDgsInN0YXR1cyI6Mn0.kzkUCtULommm25-c37r8JtHYqVay_1DEnipj0iuS7Qpd-DL0eHYTHv7dLR6ycO2XfXjRiitUrZuhVzo0vb9OBQ'

    CONTENT_TYPE='application/json'

    DATA='{"hName":"","pagination": {"pageNo" : 1,"pageSize" : 10}}'

    HOST="192.168.1.21"

    PORT="8080"

    API="trading/order/list"

    curl -X POST -H "Authorization:$TOKEN" -H "Content-Type:$CONTENT_TYPE" --data "$DATA" "http://$HOST:$PORT/api1/api/$API"
  14. netstat命令查看端口占用情况
    Linux：netstat -ntlp
    windows: netstat -nao
