1.查看文件atime, ctime和mtime， atime -〉access time指的是文件最后被读取的时间, 
                                ctime -> change time指的是文件本身最后被变更的时间，变更动作可以使chmod、chgrp、mv等等,
                                mtime -> modify time指的是文件内容最后被修改的时间，修改动作可以使echo重定向、vi等等.
  ls -l //查看mtime
  ls -l --time=atime //查看atime
  ls -l --time=ctime //查看ctime
  
2. 查看进程的启动时间
   在Linux下， 如果需要查看进程的启动时间， 常用ps aux命令，但是ps aux命令的缺陷在于只能显示时间到年、日期、或者时间， 无法具体到年月日时分秒。
   如果需要查看某个进程的具体启动时间， 使用 ps -p PID -o lstart,  其中，PID为某个进程的进程ID号。
   如下所示， 显示系统中所有httpd进程的具体启动时间。
   for pid in $(pgrep httpd); do echo -n "${pid} " ; ps -p ${pid} -o lstart | grep -v "START" ; done  
    301 Mon Aug 27 11:21:59 2012 
    344 Mon Aug 27 11:33:13 2012 
    25065 Sun Aug 26 03:27:03 2012 
    25066 Sun Aug 26 03:27:03 2012 
    25067 Sun Aug 26 03:27:03 2012 
    25068 Sun Aug 26 03:27:03 2012 
    25069 Sun Aug 26 03:27:03 2012 
    25070 Sun Aug 26 03:27:03 2012 
    25071 Sun Aug 26 03:27:03 2012 
    25072 Sun Aug 26 03:27:03 2012 
    27903 Wed Jun 20 22:50:47 2012 
    32767 Mon Aug 27 11:21:48 2012 
3. 获取字符串的后n个字符，echo ${var: -n}
   e.g：如果SHELL=/bin/bash
       那么echo ${SHELL: -1}的结果为h，echo ${SHELL: -2}的结果为sh，依次类推，当n大于字符串的长度时返回空
4. sed删除不匹配的行: sed '/<pattern>/!d'
   e.g: 假设a.txt的内容为：
        hello world.
        kobe is the best basketball player in the world.
        bye bye.
        hello sed.
        那么sed '/world/!d' a.txt的结果为
        hello world.
        kobe is the best basketball player in the world.
   
5.cut在某些情况下可以实现awk的功能
  echo "name:andy" | cut -d: -f2
  echo "name:andy" | awk -F: '{print $2}'
  区别是cut的-d只能是一个字符，awk的-F可以是多个字符。
